name: Maven Build and Test

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # 1. Repository auschecken
    - name: Checkout repository
      uses: actions/checkout@v3

    # 2. Setze Java ein (z. B. Java 17)
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'

    # 3. Maven-Abhängigkeiten cachen
    - name: Cache Maven dependencies
      uses: actions/cache@v3
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-

    # 2. Aktuelles Verzeichnis ausgeben
    - name: Print current directory
      run: pwd

    - name: Change directory and list files
      run: |
        cd mavena1
        pwd
        ls -la  

    # 4. Maven Build und Test ausführen
    - name: Build and Test with Maven
      run: | 
        cd mavena1
        mvn clean verify
        #mvn compile    
   # 5. Testberichte als Artefakte hochladen
    - name: Upload test results
      uses: actions/upload-artifact@v3
      with:
        name: test-results
        path: target/surefire-reports/*.xml

   # 6. Fehlerhafte Tests anzeigen
   # - name: Publish test results
   #   uses: dorny/test-reporter@v1
   #   with:
   #     reporter: github
   #     file: test-results.xml

   #    name: Unit Tests
   #    path: target/surefire-reports/*.xml
   #    reporter: junit

        


        
